trigger:
  branches:
    include:
      - main
      
# test

pool:
  name: 'Default'  # Nome do pool de agentes self-hosted

variables:
  imageName: 'riquez/comment-api'

steps:
- checkout: self
  displayName: 'Checkout code'
  persistCredentials: true

# Mover o conteúdo da subpasta 'comment-api' para o diretório raiz
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Moving content from comment-api to root directory"
      New-Item -ItemType Directory -Path temp -Force
      Copy-Item -Path comment-api\* -Destination temp -Recurse -Force
      if (Test-Path -Path temp) {
          Write-Host "Files copied to temp directory:"
          Get-ChildItem -Path temp -Recurse
      } else {
          Write-Error "Failed to copy files to temp directory"
      }
      Write-Host "Clearing the root directory excluding temp"
      Get-ChildItem -Path . -Exclude temp | Remove-Item -Recurse -Force
      Write-Host "Moving files from temp to root"
      Get-ChildItem -Path temp | ForEach-Object { Move-Item -Path $_.FullName -Destination . -Force }
      Remove-Item -Path temp -Recurse -Force
      Write-Host "Files in the root directory after move:"
      Get-ChildItem -Recurse
  displayName: 'Move comment-api content to root directory'

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.12'
    addToPath: true

# Garantir que pip está instalado e atualizado
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      python -m ensurepip --upgrade
      python -m pip install --upgrade pip
  displayName: 'Ensure pip is installed and upgraded'

# Adicionar diretório de scripts do Python ao PATH e instalar dependências
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $env:PATH += ";C:\Users\henri\Desktop\Docs\agent\_work\1\s\Scripts"
      pip install -r requirements.txt
  displayName: 'Install dependencies'

# Depuração: Listar arquivos antes de executar os testes
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Listando arquivos antes de executar os testes:"
      Get-ChildItem -Recurse
  displayName: 'List files before running tests'

# Executar Testes
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Running tests..."
      python -m unittest discover -s tests
  displayName: 'Run tests'

- task: Docker@2
  inputs:
    containerRegistry: 'dockerHubConnection'  # Nome da conexão de serviço configurada para o Docker Hub
    repository: '$(imageName)'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: |
      $(Build.BuildId)
